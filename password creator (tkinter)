

import tkinter as tk
from tkinter import EXCEPTION, Canvas, Checkbutton, Frame, Text, font, scrolledtext
from tkinter import ttk
from tkinter.constants import ANCHOR, BOTH, CENTER, COMMAND, NW, OFF, X
import time
from typing_extensions import IntVar
import string
import secrets

BLACK = '#000000'
WHITE = '#ffffff'
NAVYBLUE = "#00A19D"
ORCH = "#FFF8E5"
YELLOW = "#FFB344"
RED = "#E05D5D"


TITLE_FONT = ("sitka text", 25, "underline")
NORMAL_FONT = ("Arial", 12)
UNDERLINE_FONT = ("Arial", 12, "underline")
BIG_FONT = ("Arial", 20)
OTHER_FONT = ("sitka text", 15)
BUTTON_FONT = ("Arial", 10)


# -------------------------------------------

class Login:
    def __init__(self):
        self.window = tk.Tk()
        self.window.geometry('400x180')
        self.window.resizable(0, 0)
        self.window.title("Password Manager And Creator")

        self.display_frame1 = self.frame1()
        self.display_frame2 = self.frame2()
        self.text1 = "Welcome Back User"
        self.text2 = "What would u like to do today:"
        self.passwordtext = "Pls enter your password"
        self.madeby_text = "Made by Aasim Abdus"
        self.var1 = self.frame1_content()

        self.password_var = tk.StringVar()
        self.var2 = self.frame2_content1()
        self.var3 = self.create_passwordentry()

        self.var4 = self.enterbutton()
        self.password = self.password_var.get()
        self.var8 = self.madeby()
        self.var0 = ""
        self.var100 = ''
        self.character = ''
        self.text6 = "● No of characters:"
        self.char_var = tk.StringVar()

        self.label1_text = "● Do you want symbols like !@#$%^& etc?"
        self.label2_text = "● Do you want digits 1,2,3,4,5,6,7,8,9,0 ?"
        self.pagel_generate_text = "Generate Password"

        self.check1_var = tk.IntVar()
        self.check2_var = tk.IntVar()
        self.name_enter_var = tk.StringVar()
        self.email_entry = tk.StringVar()
        self.pw_var = tk.StringVar()
        self.passw_disp_var = tk.StringVar()

    # Frames-----------------------------------------------------------------
    def frame1(self):
        frame1 = tk.Frame(self.window, height=123, bg=ORCH)
        frame1.pack(fill='both')
        return frame1

    def frame2(self):
        frame2 = tk.Frame(self.window, bg=NAVYBLUE)
        frame2.pack(expand=True, fill='both')
        return frame2

    # ------------------------------------------------------------------------
    # Login Page-------------------------------------------------------------------------------------------------------

    def frame1_content(self):
        content1 = tk.Label(self.display_frame1, text=self.text1, anchor=tk.N, bg=ORCH, fg=BLACK, font=TITLE_FONT)
        content1.pack(expand=True, fill='both')
        return content1

    def frame2_content1(self):  # login page
        content2 = tk.Label(self.display_frame2, text=self.passwordtext, anchor=tk.CENTER, bg=NAVYBLUE, fg=BLACK,
                            font=NORMAL_FONT)
        content2.pack(fill="x")
        return content2

    def create_passwordentry(self):
        checkpw = tk.Entry(self.display_frame2, textvariable=self.password_var, font=NORMAL_FONT)
        checkpw.config(highlightthickness=2, highlightbackground="red")
        checkpw.pack(fill="x", side="top", anchor=NW, pady=5)
        # print(self.password)
        return checkpw

    def enterbutton(self):
        button = tk.Button(self.display_frame2, text="Enter", bg=RED, command=self.check)
        button.pack(fill="x")
        return button

    def check(self):
        self.password = self.password_var.get()
        if str(self.password) == "12345":
            self.home()
        else:

            self.password_var.set("Try Again")
            self.window.update()
            time.sleep(1)
            self.password_var.set("")

    # ------------------------------------------------------------------------------------------------------------------
    # Home page -------------------------------------------------------------------------------------------------------

    def home(self):
        self.var1.destroy()
        self.var2.destroy()
        self.var3.destroy()
        self.var4.destroy()
        self.var8.destroy()
        self.window.geometry("400x300")
        self.title = self.frame1_content2()
        self.header = self.frame2_content2()
        self.text3 = "Create a password"
        self.text4 = "Add a password"
        self.text5 = "See your Passwords"
        self.var5 = self.option_button1()
        self.var6 = self.option_button2()
        self.var0 = self.option_button3()
        self.var8 = self.madeby()

    def frame1_content2(self):  # home page
        content3 = tk.Label(self.display_frame1, text="Home", anchor=tk.N, bg=YELLOW, fg=BLACK, font=TITLE_FONT)
        content3.pack(expand=True, fill='both')
        return content3

    def frame2_content2(self):  # what would u like to do
        content4 = tk.Label(self.display_frame2, text=self.text2, anchor=tk.NW, bg=RED, fg=BLACK, font=UNDERLINE_FONT)
        content4.pack(fill="x")
        return content4

    def option_button1(self):
        button2 = tk.Button(self.display_frame2, text=self.text3, font=BIG_FONT, command=self.create_apasswordpage)
        button2.pack(fill="x")
        return button2

    def option_button2(self):
        button3 = tk.Button(self.display_frame2, text=self.text4, font=BIG_FONT, command=self.addapasswordpage)
        button3.pack(fill="x")
        return button3

    def option_button3(self):
        button4 = tk.Button(self.display_frame2, text=self.text5, font=BIG_FONT, command=self.yourpasswordpage)
        button4.pack(fill="x")
        return button4

    # Return to Home buttons-------------------------------------------------------------------------------------------

    def returnto_homebutton_opt1(self):
        return_var = tk.Button(self.display_frame2, text="Return", font=NORMAL_FONT, anchor=CENTER, fg=BLACK, bg=RED,
                               command=self.returnto_homebutton_opt1_command)
        return_var.place(x=155, y=175)
        return return_var

    def returnto_homebutton_opt2(self):
        return_var = tk.Button(self.display_frame2, text="Return", font=NORMAL_FONT, fg=BLACK, bg=RED,
                               command=self.returnto_homebutton_opt2_command)
        return_var.place(x=100, y=130)
        return return_var

    def returnto_homebutton_opt3(self):
        return_var = tk.Button(self.display_frame2, text="Return", font=NORMAL_FONT, fg=BLACK, bg=RED,
                               command=self.returnto_homebutton_opt3_command)
        return_var.pack(expand=1)
        return return_var

    def returnto_homebutton_opt1_command(self):
        self.rth_opt1()
        self.returntohome()

    def returnto_homebutton_opt2_command(self):
        self.rth_opt2()
        self.returntohome()

    def returnto_homebutton_opt3_command(self):
        self.rth_opt3()
        self.returntohome()

    def returntohome(self):
        self.window.geometry("400x300")
        self.title = self.frame1_content2()
        self.header = self.frame2_content2()
        self.var5 = self.option_button1()
        self.var6 = self.option_button2()
        self.var0 = self.option_button3()
        self.var8 = self.madeby()

    # Remove Home
    def changescreen(self):  # after home
        self.title.destroy()
        self.header.destroy()
        self.var5.destroy()
        self.var6.destroy()
        self.var0.destroy()
        self.var8.destroy()

    # ------------------------------------------------------------------------------------------------------------------
    # Page 1 Create A Password ----------------------------------------------------------------------------------------

    def frame1_content_opt1(self):
        content3 = tk.Label(self.display_frame1, text="Create A Password", anchor=tk.N, bg=YELLOW, fg=BLACK,
                            font=TITLE_FONT)
        content3.pack(expand=True, fill='both')
        return content3

    def create_a_passwordpage1_character(self):
        label = tk.Label(self.display_frame2, anchor=tk.N, text=self.text6, font=NORMAL_FONT, fg=BLACK, bg=NAVYBLUE)
        label.place(x=0, y=0)
        return label

    def create_a_entry_character(self):
        user_inp = tk.Entry(self.display_frame2, textvariable=self.char_var, font=NORMAL_FONT)
        user_inp.config(highlightthickness=2, highlightcolor="red")
        # user_inp.pack()
        user_inp.place(x=135, y=0)
        return user_inp

    def create_entry_button_char(self):
        user_confirm = tk.Button(self.display_frame2, text="Clear", font=BUTTON_FONT, bg=RED, command=self.clear_inputs)
        # user_confirm.pack()
        user_confirm.place(x=325, y=0)
        return user_confirm

    def page1_label1(self):
        label = tk.Label(self.display_frame2, text=self.label1_text, fg=BLACK, bg=NAVYBLUE, font=NORMAL_FONT)
        label.place(x=0, y=30)
        return label

    def check_button_label1(self):
        check = tk.Checkbutton(self.display_frame2, onvalue=1, offvalue=0, bg=NAVYBLUE, fg=BLACK,
                               variable=self.check1_var, )
        check.place(x=290, y=30)
        return check

    def page1_label2(self):
        label = tk.Label(self.display_frame2, text=self.label2_text, fg=BLACK, bg=NAVYBLUE, font=NORMAL_FONT)
        label.place(x=0, y=60)
        return label

    def check_button_label2(self):
        check = tk.Checkbutton(self.display_frame2, onvalue=1, offvalue=0, fg=BLACK, bg=NAVYBLUE,
                               variable=self.check2_var)
        check.place(x=300, y=60)
        return check

    def generate_passw_button(self):
        self.option1 = self.check1_var
        self.option2 = self.check2_var
        button = tk.Button(self.display_frame2, text=self.pagel_generate_text, fg=BLACK, bg=RED, font=NORMAL_FONT,
                           command=self.create_password)
        button.place(x=125, y=90)
        return button

    def password_display(self):
        display = tk.Entry(self.display_frame2, textvariable=self.passw_disp_var, font=NORMAL_FONT)
        display.config(highlightbackground="red", highlightthickness=1)

        display.place(x=107, y=135)
        return display

    def clear_inputs(self):
        self.char_var.set("")
        self.check1_var.set(0)
        self.check2_var.set(0)
        self.passw_disp_var.set("")

    def create_apasswordpage(self):
        self.change = self.changescreen()
        self.cvar = self.frame1_content_opt1()
        self.character = self.create_a_passwordpage1_character()
        self.enter = self.create_a_entry_character()
        self.enter_bu = self.create_entry_button_char()
        self.var101 = self.returnto_homebutton_opt1()
        self.symbol_var1 = self.page1_label1()
        self.check1 = self.check_button_label1()
        self.symbol_var2 = self.page1_label2()
        self.check2 = self.check_button_label2()
        self.generate = self.generate_passw_button()
        self.display = self.password_display()
        # self.madebyme = self.madeby()

    def rth_opt1(self):
        self.cvar.destroy()
        self.var101.destroy()
        self.character.destroy()
        self.enter.destroy()
        self.enter_bu.destroy()
        self.symbol_var1.destroy()
        self.check1.destroy()
        self.symbol_var2.destroy()
        self.check2.destroy()
        self.generate.destroy()
        self.display.destroy()
        # self.madebyme.destroy()

    # Create a password ------------------------------------------------------------------
    def create_password(self):
        v1 = self.check1_var.get()
        v2 = self.check2_var.get()

        try:
            n = int(self.char_var.get())
            # if n==int(self.char_var.get()):
            if self.char_var.get() == "":
                self.passw_disp_var.set("Pls define no of characters")

            if v1 == 0 and v2 == 1:
                alphabet = string.ascii_letters + string.digits
                self.passw_123 = ''.join(secrets.choice(alphabet) for i in range(int(n)))
                # print(self.passw_123)
                self.passw_disp_var.set(self.passw_123)
            elif v1 == 1 and v2 == 1:
                alphabet = string.ascii_letters + string.digits + string.punctuation
                self.passw_123 = ''.join(secrets.choice(alphabet) for i in range(int(n)))
                # print(self.passw_123)
                self.passw_disp_var.set(self.passw_123)
            elif v1 == 1 and v2 == 0:
                alphabet = string.ascii_letters + string.punctuation
                self.passw_123 = ''.join(secrets.choice(alphabet) for i in range(int(n)))
                # print(self.passw_123)
                self.passw_disp_var.set(self.passw_123)

            else:
                alphabet = string.ascii_letters
                self.passw_123 = ''.join(secrets.choice(alphabet) for i in range(int(n)))
                print(self.passw_123)
                self.passw_disp_var.set(self.passw_123)


        except (TypeError, ValueError):
            self.passw_disp_var.set("pls enter an integer")
            self.window.update()
            time.sleep(1)
            self.passw_disp_var.set("")

    # -----------------------------------------------------------------------------------=
    # Page 2 Add a Password

    def frame1_content_opt2(self):
        content3 = tk.Label(self.display_frame1, text="Add a password", anchor=tk.N, bg=YELLOW, fg=BLACK,
                            font=TITLE_FONT)
        content3.pack(expand=True, fill='both')
        return content3

    def website_name_label(self):
        webname = tk.Label(self.display_frame2, text="Title:", font=NORMAL_FONT, fg=BLACK, bg=NAVYBLUE)
        webname.place(x=0, y=0)
        return webname

    def name_entry(self):
        name_entry = tk.Entry(self.display_frame2, textvariable=self.name_enter_var)
        name_entry.place(x=40, y=0)
        return name_entry

    def emailorphonenumber_label(self):
        label = tk.Label(self.display_frame2, text="Emaill Address/Phone No./Account Name:", bg=NAVYBLUE,
                         font=NORMAL_FONT)
        label.place(x=0, y=30)
        return label

    def emamailorphonenumber_entry(self):
        entry = tk.Entry(self.display_frame2, textvariable=self.email_entry, )
        entry.place(x=300, y=30)
        return entry

    def pwlabel(self):
        pw = tk.Label(self.display_frame2, text="Password:", bg=NAVYBLUE, font=NORMAL_FONT)
        pw.place(x=0, y=60)
        return pw

    def pwentry(self):
        entry = tk.Entry(self.display_frame2, textvariable=self.pw_var)
        entry.place(x=100, y=60)
        return entry

    def save_button(self):
        button = tk.Button(self.display_frame2, text="Save", command=self.save, bg=RED, font=NORMAL_FONT)
        button.place(x=100, y=90)
        return button

    def save(self):
        self.name = self.name_enter_var.get()
        self.e_no = self.email_entry.get()
        self.save_password = self.pw_var.get()
        self.write()
        self.name_enter_var.set("")
        self.email_entry.set("")
        self.pw_var.set("")

    def addapasswordpage(self):
        self.window.geometry("450x250")
        self.change = self.changescreen()
        self.bvar = self.frame1_content_opt2()
        self.wname = self.website_name_label()
        self.wname_entry = self.name_entry()
        self.elabel = self.emailorphonenumber_label()
        self.email = self.emamailorphonenumber_entry()
        self.pw = self.pwlabel()
        self.pw_entry = self.pwentry()
        self.var102 = self.returnto_homebutton_opt2()
        self.save1 = self.save_button()
        # self.madebyme = self.madeby()

    def rth_opt2(self):
        self.bvar.destroy()
        self.var102.destroy()
        self.wname.destroy()
        self.wname_entry.destroy()
        self.email.destroy()
        self.elabel.destroy()
        self.pw.destroy()
        self.pw_entry.destroy()
        self.save1.destroy()
        # self.madebyme.destroy()

    # ----------------------------------------------------------------------------------------------------------------------
    # Open And Write file to savepassword----------------------------------------------------------------------------------
    def write(self):
        with open("password.txt", "a") as f:
            f.write(str(self.name) + "\n")
            f.write(str(self.e_no) + "\n")
            f.write(str(self.save_password) + "\n")

    def frame1_content_opt3(self):
        content3 = tk.Label(self.display_frame1, text="Your Password's", anchor=tk.N, bg=YELLOW, fg=BLACK,
                            font=TITLE_FONT)
        content3.pack(expand=True, fill='both')
        return content3

    def readfile(self):
        with open("password.txt", "r") as f:
            self.list_password = f.read()
        return self.list_password

    def time(self):
        self.stacked_frame = Frame(self.display_frame2, bg=ORCH)
        self.stacked_frame.pack()
        text = scrolledtext.ScrolledText(self.stacked_frame)
        text.insert("1.0", self.list_password)
        text.configure(state="disabled", bg=ORCH)
        text.pack()

        return text, self.stacked_frame

    def rth_opt3(self):
        self.avar.destroy()

        self.var103.destroy()
        print("executed", self.beta)
        self.stacked_frame.destroy()
        # self.scrolledtext.ScrolledText.destroy()
        # self.beta.destroy()
        self.madebyme.destroy()

    def yourpasswordpage(self):
        self.window.geometry("400x500")
        self.change = self.changescreen()
        self.avar = self.frame1_content_opt3()
        self.readfile()
        self.beta = self.time()
        self.var103 = self.returnto_homebutton_opt3()
        self.madebyme = self.madeby()

    # Universal --------------------------------------------------------------------------------------------
    def run_self(self):
        self.window.mainloop()

    def madeby(self):
        me = tk.Label(self.display_frame2, text=self.madeby_text, anchor=tk.SE, font=OTHER_FONT, bg=NAVYBLUE, fg=BLACK)
        me.pack(fill="x")
        return me
    # ----------------------------------------------------------------------------------------------------------


if __name__ == '__main__':
    site = Login()
    site.run_self()
